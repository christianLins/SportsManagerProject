package presentation.forms.member;

import com.ServiceClient;
import com.ServiceNotAvailableException;
import contract.dto.*;
import contract.useCaseController.INewMember;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import presentation.basics.AbstractForm;
import presentation.basics.AbstractMainForm;
import contract.dto.classes.*;
import presentation.forms.helper.SelectSportsHelper;
import presentation.forms.helper.SelectTeamsHelper;
import contract.dto.classes.AddressDto;
import contract.dto.classes.MemberDto;

/**
 *
 * @author Lucia
 */
public class NewMemberForm
        extends AbstractMainForm {
    //Controler and contract

    ServiceClient client;
    INewMember controller;
    IMemberDto member;
    IMemberDto user;
    IRoleDto role;
    IDepartmentDto department;
    IAddressDto address;
    ICountryDto country;
    IClubTeamDto clubTeam;
    private List<ITypeOfSportDto> typeOfSports;
    private List<ITypeOfSportDto> availableSports;
    private List<ITypeOfSportDto> selectedSports;
    private List<IClubTeamDto> selectedTeams;
    private boolean adminPermission = false;

    /**
     * Creates new form NewMemb
     */
    public NewMemberForm(AbstractForm form, ServiceClient client, IMemberDto user)
            throws ServiceNotAvailableException {
        super(form);
        initComponents();

        this.client = client;
        this.user = user;
        //adminPermission = user.hasPermission();
        if (!adminPermission) {
            disableExtendedRadioSelection();
        }
        this.selectedSports = new LinkedList<>();
        controller = this.client.getNewMemberService();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneNewMember = new javax.swing.JPanel();
        panePersonData = new javax.swing.JPanel();
        lblFName = new javax.swing.JLabel();
        txtfieldFName = new javax.swing.JTextField();
        lblLName = new javax.swing.JLabel();
        txtfieldLName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtfieldAddress = new javax.swing.JTextField();
        txtfieldPostCode = new javax.swing.JTextField();
        lblPostCode = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtfieldCity = new javax.swing.JTextField();
        txtfieldCountry = new javax.swing.JTextField();
        lblCountry = new javax.swing.JLabel();
        lblMail = new javax.swing.JLabel();
        lblBirthDate = new javax.swing.JLabel();
        dateChooserBirth = new com.toedter.calendar.JDateChooser();
        lblGender = new javax.swing.JLabel();
        txtfieldPhone = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        radioFemale = new javax.swing.JRadioButton();
        radioMale = new javax.swing.JRadioButton();
        txtfieldMail = new javax.swing.JTextField();
        paneMembershipData = new javax.swing.JPanel();
        lblEntryDate = new javax.swing.JLabel();
        dateChooserEntry = new com.toedter.calendar.JDateChooser();
        lblRole = new javax.swing.JLabel();
        radioAdmin = new javax.swing.JRadioButton();
        radioTrainer = new javax.swing.JRadioButton();
        radioPlayer = new javax.swing.JRadioButton();
        lblTeam = new javax.swing.JLabel();
        radioDeptHead = new javax.swing.JRadioButton();
        radioCaretaker = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtFieldSport = new javax.swing.JTextField();
        btnAddSports = new javax.swing.JButton();
        txtFieldTeam = new javax.swing.JTextField();
        btnTeams = new javax.swing.JButton();
        btnSaveMember = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add New Member");
        setMinimumSize(new java.awt.Dimension(848, 549));

        paneNewMember.setName(""); // NOI18N
        paneNewMember.setPreferredSize(new java.awt.Dimension(848, 546));

        panePersonData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Person Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        lblFName.setText("First Name");

        lblLName.setText("Last Name");

        lblAddress.setText("Address");

        lblPostCode.setText("Post Code");

        lblCity.setText("City");

        lblCountry.setText("Country");

        lblMail.setText("Mail");

        lblBirthDate.setText("Birth Date");

        lblGender.setText("Gender");

        lblPhone.setText("Phone");

        radioFemale.setText("female");
        radioFemale.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioFemaleStateChanged(evt);
            }
        });

        radioMale.setText("male");
        radioMale.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioMaleStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panePersonDataLayout = new javax.swing.GroupLayout(panePersonData);
        panePersonData.setLayout(panePersonDataLayout);
        panePersonDataLayout.setHorizontalGroup(
            panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panePersonDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFName)
                    .addComponent(lblAddress)
                    .addComponent(lblCity)
                    .addComponent(lblBirthDate)
                    .addComponent(lblPhone))
                .addGap(26, 26, 26)
                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panePersonDataLayout.createSequentialGroup()
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfieldPhone)
                            .addGroup(panePersonDataLayout.createSequentialGroup()
                                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtfieldCity)
                                    .addComponent(txtfieldFName)
                                    .addComponent(txtfieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE))
                    .addGroup(panePersonDataLayout.createSequentialGroup()
                        .addComponent(dateChooserBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panePersonDataLayout.createSequentialGroup()
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMail)
                            .addComponent(lblCountry)
                            .addComponent(lblGender))
                        .addGap(10, 10, 10))
                    .addComponent(lblLName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPostCode, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panePersonDataLayout.createSequentialGroup()
                        .addComponent(radioFemale)
                        .addGap(18, 18, 18)
                        .addComponent(radioMale)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panePersonDataLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfieldCountry)
                            .addComponent(txtfieldPostCode)
                            .addComponent(txtfieldLName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfieldMail, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(191, 191, 191))
        );
        panePersonDataLayout.setVerticalGroup(
            panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panePersonDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panePersonDataLayout.createSequentialGroup()
                        .addComponent(txtfieldFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateChooserBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panePersonDataLayout.createSequentialGroup()
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLName)
                            .addComponent(txtfieldLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPostCode)
                            .addComponent(txtfieldPostCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCountry)
                            .addComponent(lblCity))
                        .addGap(30, 30, 30)
                        .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panePersonDataLayout.createSequentialGroup()
                                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMail)
                                    .addComponent(txtfieldMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panePersonDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioFemale)
                                    .addComponent(radioMale)
                                    .addComponent(lblGender)))
                            .addComponent(lblBirthDate))))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        paneMembershipData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Membership Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        lblEntryDate.setText("Entry Date");

        lblRole.setText("Role");

        radioAdmin.setText("Admin");

        radioTrainer.setText("Trainer");

        radioPlayer.setText("Player");

        lblTeam.setText("Team");

        radioDeptHead.setText("Department Head");

        radioCaretaker.setText("Caretaker");

        jLabel1.setText("Sport(s)");

        txtFieldSport.setEnabled(false);

        btnAddSports.setText("Select Sport(s)");
        btnAddSports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSportsActionPerformed(evt);
            }
        });

        txtFieldTeam.setEnabled(false);

        btnTeams.setText("Select Team(s)");
        btnTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeamsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneMembershipDataLayout = new javax.swing.GroupLayout(paneMembershipData);
        paneMembershipData.setLayout(paneMembershipDataLayout);
        paneMembershipDataLayout.setHorizontalGroup(
            paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMembershipDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEntryDate)
                    .addComponent(lblTeam)
                    .addComponent(lblRole)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneMembershipDataLayout.createSequentialGroup()
                        .addComponent(radioAdmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioCaretaker)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDeptHead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioTrainer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioPlayer))
                    .addGroup(paneMembershipDataLayout.createSequentialGroup()
                        .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFieldTeam)
                            .addComponent(txtFieldSport, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddSports, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTeams, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)))
                    .addComponent(dateChooserEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paneMembershipDataLayout.setVerticalGroup(
            paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMembershipDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEntryDate)
                    .addComponent(dateChooserEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(radioAdmin)
                    .addComponent(radioTrainer)
                    .addComponent(radioPlayer)
                    .addComponent(radioDeptHead)
                    .addComponent(radioCaretaker))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFieldSport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddSports))
                .addGap(6, 6, 6)
                .addGroup(paneMembershipDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeam)
                    .addComponent(txtFieldTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTeams))
                .addGap(69, 69, 69))
        );

        btnSaveMember.setText("Save Member");
        btnSaveMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveMemberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneNewMemberLayout = new javax.swing.GroupLayout(paneNewMember);
        paneNewMember.setLayout(paneNewMemberLayout);
        paneNewMemberLayout.setHorizontalGroup(
            paneNewMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneNewMemberLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneNewMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panePersonData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paneMembershipData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneNewMemberLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSaveMember)))
                .addContainerGap())
        );
        paneNewMemberLayout.setVerticalGroup(
            paneNewMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneNewMemberLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panePersonData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(paneMembershipData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btnSaveMember)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneNewMember, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneNewMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveMemberActionPerformed
        if (validInput()) {
            setMemberData();
            //TODO add some success message                    
        } else {
            JOptionPane.showMessageDialog(parent, "Please fill in all text fields!");
        }
    }//GEN-LAST:event_btnSaveMemberActionPerformed

    private void btnAddSportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSportsActionPerformed
        setAvailableSports(loadSportsList());
        SelectSportsHelper selectSportsHelper = new SelectSportsHelper(availableSports, new LinkedList<ITypeOfSportDto>(), this);
    }//GEN-LAST:event_btnAddSportsActionPerformed

    private void btnTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeamsActionPerformed
        SelectTeamsHelper selectTeamsHelper = new SelectTeamsHelper(selectedSports, this);
    }//GEN-LAST:event_btnTeamsActionPerformed

    private void radioFemaleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioFemaleStateChanged
        if (radioFemale.isSelected()) {
            radioMale.setSelected(false);
        }
    }//GEN-LAST:event_radioFemaleStateChanged

    private void radioMaleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioMaleStateChanged
        if (radioMale.isSelected()) {
            radioFemale.setSelected(false);
        }
    }//GEN-LAST:event_radioMaleStateChanged

    private List<Integer> getSelectedSports() {
        List<Integer> tosIDs = new LinkedList<>();

        for (ITypeOfSportDto tos : typeOfSports) {
            for (ITypeOfSportDto s : selectedSports) {
                if (s.equals(tos)) {
                    tosIDs.add(tos.getId());
                }
            }
        }
        return tosIDs;
    }

    private List<Integer> loadSportsList() {
        LinkedList<Integer> ids = new LinkedList<>();
        List<ITypeOfSportDto> allSports = controller.getAllSports();

        for(ITypeOfSportDto dto : allSports){
            ids.add(dto.getId());
        }
        return ids;
    }

    private void setAvailableSports(List<Integer> typeOfSportList) {
        typeOfSports = controller.getTypeOfSports(typeOfSportList);
        availableSports = new LinkedList<>();

        for (ITypeOfSportDto s : typeOfSports) {
            availableSports.add(s);
        }
    }

    @Override
    public void setTxtFieldSports(List<ITypeOfSportDto> selection) {
        this.selectedSports = selection;

        StringBuilder sb = new StringBuilder(selectedSports.size());
        for (ITypeOfSportDto s : selectedSports) {
            sb.append(s);
            sb.append(", ");
        }
        sb.delete(sb.length() - 2, sb.length());    //TODO check if this works 

        txtFieldSport.setText(sb.toString());
    }

    @Override
    public void setTxtFieldTeams(List<IClubTeamDto> selected) {
        
        if(selected.isEmpty())
        {
            txtFieldTeam.setText("");
            return;
        }
        
        this.selectedTeams = selected;

        StringBuilder sb = new StringBuilder(selectedTeams.size());

        for (IClubTeamDto ct : selectedTeams) {
            sb.append(ct);
            sb.append(", ");
        }
       
        
        txtFieldTeam.setText(sb.toString().substring(sb.length() -2,sb.length()));

    }

    @Override
    public List<IClubTeamDto> getClubTeams(ITypeOfSportDto sport) {
        return controller.getClubTeamsByTypeOfSport(sport);
    }

    private List<Integer> getSelectedTeams() {
        List<Integer> clubTeamIDs = new LinkedList<>();
        if(selectedTeams == null) return null;

        for (IClubTeamDto c : selectedTeams) {
            clubTeamIDs.add(c.getId());
        }
        return clubTeamIDs;
    }

    private void setMemberData() {
        member = new MemberDto();
        member.setPrename(txtfieldFName.getText());
        member.setLastname(txtfieldLName.getText());
        member.setDateOfBirth(dateChooserBirth.getDate());
        member.setMemberFrom(dateChooserEntry.getDate());
        member.setTelephonenumber(txtfieldPhone.getText());
        member.setEmailAddress(txtfieldMail.getText());

        address = new AddressDto();
        address.setStreet(txtfieldAddress.getText());
        address.setPostalCode(Integer.parseInt(txtfieldPostCode.getText()));
        address.setVillage(txtfieldCity.getText());
        member.setAddress(address.getId());

        country = new CountryDto();
        country.setName(txtfieldCountry.getText());
        member.setNationality(country.getId());

        if (radioFemale.isSelected()) {
            member.setGender(true);
        } else {
            member.setGender(false);
        }

        //TODO: which case only member and address necessary?!
        //role list necessary?
        List<IRoleDto> membersRoles = new LinkedList<>();

        if (adminPermission) {
            if (radioAdmin.isSelected()) {
                membersRoles.add(new AdminDto());
            }
            if (radioCaretaker.isSelected()) {
                membersRoles.add(new CaretakerDto());
            }
            if (radioDeptHead.isSelected()) {
                membersRoles.add(new DepartmentHeadDto());
            }
            if (radioTrainer.isSelected()) {
                ITrainerDto trainer = new TrainerDto();
                membersRoles.add(trainer);
                trainer.setTypeOfSportList(getSelectedSports());
                trainer.setClubTeamList(getSelectedTeams());
            }
        }

        if (radioPlayer.isSelected()) {
            IPlayerDto player = new PlayerDto();
            membersRoles.add(player);
            player.setTypeOfSportList(getSelectedSports());
            player.setClubTeamList(getSelectedTeams());
        }

        List<Integer> roleInt = new LinkedList<>();
        for (IRoleDto role : membersRoles) {
            roleInt.add(role.getId());
        }

        member.setRoleList(roleInt);


        if (radioTrainer.isSelected() || radioPlayer.isSelected()) {
            member.setRoleList(roleInt);

           
            //TODO: übergabe clubTeam liste und role liste
            controller.setNewMember(member, address);
        } else {
            controller.setNewMember(member, address);
        }
    }

    private boolean validInput() {
        boolean success = true;

        if (txtfieldFName.getText().isEmpty()) {
            success = false;
        } else if (txtfieldLName.getText().isEmpty()) {
            success = false;
        } else if (txtfieldCity.getText().isEmpty()) {
            success = false;
        } else if (dateChooserBirth.getDate() == null) {
            success = false;
        }

        return success;
    }

    private void disableExtendedRadioSelection() {
        radioAdmin.setEnabled(false);
        radioCaretaker.setEnabled(false);
        radioDeptHead.setEnabled(false);
        radioTrainer.setEnabled(false);
    }

    public JPanel getPanel() {
        return paneNewMember;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSports;
    private javax.swing.JButton btnSaveMember;
    private javax.swing.JButton btnTeams;
    private com.toedter.calendar.JDateChooser dateChooserBirth;
    private com.toedter.calendar.JDateChooser dateChooserEntry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblBirthDate;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblEntryDate;
    private javax.swing.JLabel lblFName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLName;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPostCode;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTeam;
    private javax.swing.JPanel paneMembershipData;
    private javax.swing.JPanel paneNewMember;
    private javax.swing.JPanel panePersonData;
    private javax.swing.JRadioButton radioAdmin;
    private javax.swing.JRadioButton radioCaretaker;
    private javax.swing.JRadioButton radioDeptHead;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JRadioButton radioPlayer;
    private javax.swing.JRadioButton radioTrainer;
    private javax.swing.JTextField txtFieldSport;
    private javax.swing.JTextField txtFieldTeam;
    private javax.swing.JTextField txtfieldAddress;
    private javax.swing.JTextField txtfieldCity;
    private javax.swing.JTextField txtfieldCountry;
    private javax.swing.JTextField txtfieldFName;
    private javax.swing.JTextField txtfieldLName;
    private javax.swing.JTextField txtfieldMail;
    private javax.swing.JTextField txtfieldPhone;
    private javax.swing.JTextField txtfieldPostCode;
    // End of variables declaration//GEN-END:variables
}
